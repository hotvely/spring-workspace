<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context" xmlns:security="http://www.springframework.org/schema/security" xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<bean id="loginSuccess" class="com.kh.security.LoginSuccessHandler" />
	<bean id="CustomAccessDeniedHandler" class="com.kh.security.CustomAccessDeniedHandler" />
	<!-- 암호화.. -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<context:component-scan base-package="com.kh.mvc">
	</context:component-scan>
	<bean id="memberService" class="com.kh.mvc.model.service.MemberService"></bean>
	<!-- <bean id="boardService" class="com.kh.mvc.model.service.BoardService"></bean> -->



	<security:http>
		<security:intercept-url pattern="/user/all" access="permitAll" />
		<security:intercept-url pattern="/board/view" access="permitAll" />
		<security:intercept-url pattern="/board/update" access="hasAnyRole('ROLE_MEMBER')" />
		<security:intercept-url pattern="/board/insert" access="hasAnyRole('ROLE_MEMBER')" />

		<!-- hasRole : 한개 역할 지정(관리자만...), hasAnyRole : 여러개 역할 지정(관리자,일반회원 모두 ) -->
		<security:intercept-url pattern="/user/member" access="hasAnyRole('ROLE_MEMBER')" />
		<security:intercept-url pattern="/user/admin" access="hasRole('ROLE_ADMIN')" />
		<security:form-login login-page="/user/login" authentication-success-handler-ref="loginSuccess" />

		<!-- csrf 안쓰려면.. -->
		<security:csrf disabled="true" />
		<security:logout logout-url="/logout" invalidate-session="true" />

		<!-- <security:access-denied-handler error-page="/error"/> -->
		<security:access-denied-handler ref="CustomAccessDeniedHandler" />
	</security:http>
	
	<!-- 인증 매니저 -->
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="memberService">
			<!-- <security:user-service> <security:user name="member" password="{noop}member" authorities="ROLE_MEMBER" /> <security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN" /> </security:user-service> -->
			<security:password-encoder hash="bcrypt" />
		</security:authentication-provider>
	</security:authentication-manager>



</beans>
